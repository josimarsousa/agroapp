<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - agroApp</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/navbar-modern.css">
    <link rel="stylesheet" href="/css/menu-override.css">
    <link rel="stylesheet" href="/css/agroapp-theme.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .chart-container {
            position: relative;
            height: 400px;
            width: 100%;
        }
        
        .loading-spinner {
            display: none;
            text-align: center;
            padding: 2rem;
        }
        
        .filter-section {
            background: var(--card-bg);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
        }
        
        .chart-card {
            background: var(--card-bg);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
        }
        
        .chart-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
        }
        
        .chart-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
        }
        
        .chart-icon {
            width: 24px;
            height: 24px;
            color: var(--primary-color);
        }
        

        
        .btn-secondary {
            background: var(--secondary-color);
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius);
            color: white;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }
        
        .btn-secondary:hover {
            background: var(--secondary-hover);
            color: white;
            text-decoration: none;
            transform: translateY(-1px);
        }
    </style>
</head>
<body class="dashboard-body">
    <%- include('../partials/header') %>
    <div class="menu-toggle" id="menu-toggle">
        <div class="bar"></div>
        <div class="bar"></div>
        <div class="bar"></div>
    </div>

    <div class="dashboard-container">
        <main class="dashboard-main">
            <div class="page-header">
                <div class="page-icon">
                    <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3 3V21H21V3H3ZM19 19H5V5H19V19Z" stroke="currentColor" stroke-width="2"/>
                        <path d="M9 9H15V15H9V9Z" fill="currentColor"/>
                    </svg>
                </div>
                <h1>Gráficos e Relatórios</h1>
                <a href="/dashboard" class="btn-secondary">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19 12H5M12 19L5 12L12 5" stroke="currentColor" stroke-width="2"/>
                    </svg>
                    Voltar
                </a>
            </div>

            <div class="page-content">

                <!-- Filtros -->
                <div class="filter-section">
                    <h3 style="margin-bottom: 1rem;">Filtros</h3>
                    <div class="d-flex gap-3 align-items-end" style="flex-wrap: wrap;">
                        <div style="min-width: 200px;">
                            <label for="periodSelect" class="form-label">Período</label>
                            <select class="form-control" id="periodSelect">
                                <option value="7">Últimos 7 dias</option>
                                <option value="15">Últimos 15 dias</option>
                                <option value="30" selected>Últimos 30 dias</option>
                                <option value="60">Últimos 60 dias</option>
                                <option value="90">Últimos 90 dias</option>
                            </select>
                        </div>
                        <div style="min-width: 200px;">
                            <label for="topProductsLimit" class="form-label">Top Produtos</label>
                            <select class="form-control" id="topProductsLimit">
                                <option value="5">Top 5</option>
                                <option value="10" selected>Top 10</option>
                                <option value="15">Top 15</option>
                                <option value="20">Top 20</option>
                            </select>
                        </div>
                        <div>
                            <button type="button" id="updateChartsBtn" class="btn btn-primary">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-right: 0.5rem;">
                                    <path d="M1 4V10H7" stroke="currentColor" stroke-width="2"/>
                                    <path d="M23 20V14H17" stroke="currentColor" stroke-width="2"/>
                                    <path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10M23 14L18.36 18.36A9 9 0 0 1 3.51 15" stroke="currentColor" stroke-width="2"/>
                                </svg>
                                Atualizar Gráficos
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Gráficos -->
                <div class="d-flex gap-4 mb-4" style="flex-wrap: wrap;">
                    <!-- Gráfico de Vendas -->
                    <div class="chart-card" style="flex: 1; min-width: 500px;">
                        <div class="chart-header">
                            <svg class="chart-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 2L13.09 8.26L22 9L13.09 9.74L12 16L10.91 9.74L2 9L10.91 8.26L12 2Z" fill="currentColor"/>
                            </svg>
                            <h3 style="margin: 0;">Vendas por Período</h3>
                        </div>
                        <div class="loading-spinner" id="salesLoading">
                            <div class="spinner" style="border: 4px solid #f3f3f3; border-top: 4px solid var(--primary-color); border-radius: 50%; width: 40px; height: 40px; animation: spin 2s linear infinite; margin: 0 auto;"></div>
                            <p style="margin-top: 1rem;">Carregando...</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="salesChart"></canvas>
                        </div>
                    </div>

                    <!-- Gráfico de Produtos Mais Vendidos -->
                    <div class="chart-card" style="flex: 1; min-width: 500px;">
                        <div class="chart-header">
                            <svg class="chart-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <rect x="2" y="3" width="20" height="14" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
                                <line x1="8" y1="21" x2="16" y2="21" stroke="currentColor" stroke-width="2"/>
                                <line x1="12" y1="17" x2="12" y2="21" stroke="currentColor" stroke-width="2"/>
                            </svg>
                            <h3 style="margin: 0;">Produtos Mais Vendidos</h3>
                        </div>
                        <div class="loading-spinner" id="productsLoading">
                            <div class="spinner" style="border: 4px solid #f3f3f3; border-top: 4px solid var(--primary-color); border-radius: 50%; width: 40px; height: 40px; animation: spin 2s linear infinite; margin: 0 auto;"></div>
                            <p style="margin-top: 1rem;">Carregando...</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="topProductsChart"></canvas>
                        </div>
                    </div>
                </div>

                <div class="d-flex gap-4 mb-4" style="flex-wrap: wrap;">
                    <!-- Gráfico de Colheitas -->
                    <div class="chart-card" style="flex: 1; min-width: 500px;">
                        <div class="chart-header">
                            <svg class="chart-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 2L13.09 8.26L22 9L13.09 9.74L12 16L10.91 9.74L2 9L10.91 8.26L12 2Z" fill="currentColor"/>
                            </svg>
                            <h3 style="margin: 0;">Colheitas por Período</h3>
                        </div>
                        <div class="loading-spinner" id="harvestsLoading">
                            <div class="spinner" style="border: 4px solid #f3f3f3; border-top: 4px solid var(--primary-color); border-radius: 50%; width: 40px; height: 40px; animation: spin 2s linear infinite; margin: 0 auto;"></div>
                            <p style="margin-top: 1rem;">Carregando...</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="harvestsChart"></canvas>
                        </div>
                    </div>

                    <!-- Gráfico de Perdas -->
                    <div class="chart-card" style="flex: 1; min-width: 500px;">
                        <div class="chart-header">
                            <svg class="chart-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 2L13.09 8.26L22 9L13.09 9.74L12 16L10.91 9.74L2 9L10.91 8.26L12 2Z" fill="currentColor"/>
                            </svg>
                            <h3 style="margin: 0;">Perdas por Período</h3>
                        </div>
                        <div class="loading-spinner" id="lossesLoading">
                            <div class="spinner" style="border: 4px solid #f3f3f3; border-top: 4px solid var(--primary-color); border-radius: 50%; width: 40px; height: 40px; animation: spin 2s linear infinite; margin: 0 auto;"></div>
                            <p style="margin-top: 1rem;">Carregando...</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="lossesChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/script.js"></script>
    <script>
        let salesChart, topProductsChart, harvestsChart, lossesChart;

        // Função para mostrar/esconder loading
        function toggleLoading(chartId, show) {
            const loading = document.getElementById(chartId + 'Loading');
            if (loading) {
                loading.style.display = show ? 'block' : 'none';
            }
        }

        // Função para carregar gráfico de vendas
        async function loadSalesChart(period = 30) {
            try {
                toggleLoading('sales', true);
                const period = document.getElementById('periodSelect').value;
                
                const response = await fetch(`/charts/api/sales-data?period=${period}`, {
                    credentials: 'include',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();

                const ctx = document.getElementById('salesChart').getContext('2d');
                
                if (salesChart) {
                    salesChart.destroy();
                }

                salesChart = new Chart(ctx, {
                    type: 'bar',
                    data: data,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Faturamento (R$)'
                                }
                            },
                            y1: {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                title: {
                                    display: true,
                                    text: 'Quantidade de Vendas'
                                },
                                grid: {
                                    drawOnChartArea: false,
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top'
                            }
                        }
                    }
                });
                toggleLoading('sales', false);
            } catch (error) {
                console.error('Erro ao carregar gráfico de vendas:', error);
                toggleLoading('sales', false);
            }
        }

        // Função para carregar gráfico de produtos mais vendidos
        async function loadTopProductsChart() {
            try {
                toggleLoading('products', true);
                const limit = document.getElementById('topProductsLimit').value;
                const period = document.getElementById('periodSelect').value;
                
                const response = await fetch(`/charts/api/top-products?limit=${limit}&period=${period}`, {
                    credentials: 'include',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();

                const ctx = document.getElementById('topProductsChart').getContext('2d');
                
                if (topProductsChart) {
                    topProductsChart.destroy();
                }

                topProductsChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: data.labels,
                        datasets: [{
                            label: 'Quantidade Vendida',
                            data: data.datasets[0].data,
                            backgroundColor: [
                                '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',
                                '#FF9F40', '#FF6384', '#C9CBCF', '#4BC0C0', '#FF6384'
                            ],
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: true,
                                position: 'bottom'
                            }
                        }
                    }
                });
                toggleLoading('products', false);
            } catch (error) {
                console.error('Erro ao carregar gráfico de produtos:', error);
                toggleLoading('products', false);
            }
        }

        // Função para carregar gráfico de colheitas
        async function loadHarvestsChart() {
            try {
                toggleLoading('harvests', true);
                const period = document.getElementById('periodSelect').value;
                const response = await fetch(`/charts/api/harvests-data?period=${period}`, {
                    credentials: 'include',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();

                const ctx = document.getElementById('harvestsChart').getContext('2d');
                
                if (harvestsChart) {
                    harvestsChart.destroy();
                }

                harvestsChart = new Chart(ctx, {
                    type: 'line',
                    data: data,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Quantidade (kg)'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top'
                            }
                        }
                    }
                });
                toggleLoading('harvests', false);
            } catch (error) {
                console.error('Erro ao carregar gráfico de colheitas:', error);
                toggleLoading('harvests', false);
            }
        }

        // Função para carregar gráfico de perdas
        async function loadLossesChart() {
            try {
                toggleLoading('losses', true);
                const period = document.getElementById('periodSelect').value;
                const response = await fetch(`/charts/api/losses-data?period=${period}`, {
                    credentials: 'include',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();

                const ctx = document.getElementById('lossesChart').getContext('2d');
                
                if (lossesChart) {
                    lossesChart.destroy();
                }

                lossesChart = new Chart(ctx, {
                    type: 'line',
                    data: data,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Quantidade Perdida (kg)'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top'
                            }
                        }
                    }
                });
                toggleLoading('losses', false);
            } catch (error) {
                console.error('Erro ao carregar gráfico de perdas:', error);
                toggleLoading('losses', false);
            }
        }

        // Função para lidar com o clique do botão
        function handleUpdateButtonClick() {
            if (typeof updateAllCharts === 'function') {
                updateAllCharts();
            } else {
                console.error('updateAllCharts não está definida como função!');
            }
        }

        // Função para atualizar todos os gráficos
        async function updateAllCharts() {
            try {
                // Obter valores dos seletores
                const period = document.getElementById('periodSelect').value;
                const limit = document.getElementById('topProductsLimit').value;
                
                // Executar todas as funções de carregamento em paralelo
                await Promise.all([
                    loadSalesChart(),
                    loadTopProductsChart(),
                    loadHarvestsChart(),
                    loadLossesChart()
                ]);
                
            } catch (error) {
                console.error('Erro ao atualizar gráficos:', error);
            }
        }

        // Adicionar event listener para o botão
        document.addEventListener('DOMContentLoaded', function() {
            const updateButton = document.getElementById('updateChartsBtn');
            if (updateButton) {
                updateButton.addEventListener('click', function(e) {
                    e.preventDefault();
                    handleUpdateButtonClick();
                });
            } else {
                console.error('Botão updateChartsBtn não encontrado!');
            }
            
            // Carregar gráficos iniciais
            updateAllCharts();
        });
    </script>
</body>
</html>